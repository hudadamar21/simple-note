{"version":3,"sources":["Config/firebase/index.js","Containers/pages/Dashboard/index.js","Config/redux/action/index.js","Components/atoms/Button/index.js","Containers/pages/Login/index.js","Containers/pages/Register/index.js","Config/redux/reducer/index.js","Config/redux/store/index.js","Containers/pages/App/index.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","Dashboard","props","setDate","date","getDay","Date","tanggal","getDate","bulan","getMonth","tahun","getFullYear","componentDidMount","a","userData","JSON","parse","localStorage","getItem","getNote","uid","dashboard","document","querySelector","style","flexDirection","textAlign","padding","innerHTML","handleInputChange","e","name","setState","target","value","handleSaveNote","state","title","content","isUpdate","noteId","saveNote","updateNote","data","userId","getTime","then","updateInput","note","console","log","id","handleCancel","this","deleteNote","notes","className","placeholder","onChange","onClick","length","map","key","parentElement","nextSibling","transform","opacity","setTimeout","classList","remove","stopPropagation","add","Component","connect","dispatch","userID","Promise","resolve","reject","ref","on","snapshot","dataNotes","val","Object","keys","forEach","push","type","error","getDataAPI","addDataAPI","putNote","set","err","alert","updateDataAPI","deleteDataAPI","Button","loading","disabled","Login","handleLoginSubmit","email","password","blankForm","history","loginFirebaseUser","catch","res","setItem","stringify","popup","isLoading","href","blankform","auth","signInWithEmailAndPassword","user","emailVerified","refreshToken","errorCode","code","errorMessage","message","loginUser","Register","handleRegisterSubmit","registerFirebaseUser","changeUser","changeUserName","userName","createUserWithEmailAndPassword","registerUser","initState","isLogin","reducer","action","store","createStore","applyMiddleware","thunk","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c09b6b9e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBNQDVwVey1dgpPFVbyk6OJL611Q4cHi5s\",\r\n  authDomain: \"simple-notes-firebase-76202.firebaseapp.com\",\r\n  databaseURL: \"https://simple-notes-firebase-76202.firebaseio.com\",\r\n  projectId: \"simple-notes-firebase-76202\",\r\n  storageBucket: \"simple-notes-firebase-76202.appspot.com\",\r\n  messagingSenderId: \"690875245691\",\r\n  appId: \"1:690875245691:web:d313b0d695a71ce639eede\",\r\n  measurementId: \"G-DYCTLDL1SS\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const database = firebase.database();\r\n\r\nexport default firebase;","import React, {Component, Fragment} from 'react';\r\nimport './dashboard.scss'\r\nimport { addDataAPI, getDataAPI, updateDataAPI, deleteDataAPI} from '../../../Config/redux/action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Dashboard extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      title: '',\r\n      content: '',\r\n      date: '',\r\n      noteId: '',\r\n      isUpdate: false\r\n    }\r\n  }\r\n\r\n  setDate = (date) => {\r\n    const hari = ['Minggu', 'Selasa','Rabu','Kamis','Jum\\'at','Sabtu'];\r\n    const getDay = new Date(date).getDay()\r\n    const tanggal = new Date(date).getDate()\r\n    const bulan = new Date(date).getMonth() + 1\r\n    const tahun = new Date(date).getFullYear()\r\n    return `${hari[getDay]} | ${tanggal}-${bulan}-${tahun}`;\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const userData = JSON.parse(localStorage.getItem('userData'));\r\n    if(userData){\r\n      await this.props.getNote(userData.uid);\r\n    } else {\r\n      const dashboard = document.querySelector('.dash-container');\r\n      dashboard.style.flexDirection = 'column';\r\n      dashboard.style.textAlign = 'center'\r\n      dashboard.style.padding = '100px 0'\r\n      dashboard.innerHTML =\r\n      `<h1>404 Not Found</h1>\r\n        <hr/>\r\n       <p>you are not user, please login..</p>\r\n       <a href=\"/\">Oke i'm Back</a>`\r\n    }\r\n  }\r\n\r\n  handleInputChange = (e, name) => {\r\n    this.setState({\r\n      [name] : e.target.value\r\n    })\r\n  }\r\n\r\n  handleSaveNote = () => {\r\n    const {title, content,isUpdate, noteId} = this.state;\r\n    const {saveNote, updateNote} = this.props;\r\n    const userData = JSON.parse(localStorage.getItem('userData'))\r\n    const data = {\r\n      title  :title,\r\n      content : content,\r\n      userId: userData.uid,\r\n      date: new Date().getTime()\r\n    }\r\n    if(!isUpdate){\r\n      saveNote(data);\r\n    } else {\r\n      data.noteId = noteId;\r\n      updateNote(data).then(() => {\r\n        this.setState({\r\n          title: '',\r\n          content: '',\r\n          isUpdate: false\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  updateInput = (note) => {\r\n    console.log(note)\r\n    this.setState({\r\n      title: note.data.title,\r\n      content: note.data.content,\r\n      noteId: note.id,\r\n      isUpdate: true\r\n    })\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.setState({\r\n      title: '',\r\n      content: '',\r\n      isUpdate: false\r\n    })\r\n  }\r\n\r\n  deleteNote(note){\r\n    const userData = JSON.parse(localStorage.getItem('userData'))\r\n    const data = {\r\n      userId : userData.uid,\r\n      noteId : note.id\r\n    }\r\n    this.props.deleteNote(data)\r\n  }\r\n\r\n  render(){\r\n    const {title, content} = this.state;\r\n    const {notes} = this.props;\r\n    return (\r\n      <div className=\"dash-container\">\r\n          <div className=\"dash-header\">\r\n           <h3>Dashboard pages</h3>\r\n            <input placeholder=\"title..\" className=\"title\" value={title}\r\n                    onChange={(e) => this.handleInputChange(e, 'title')}/>\r\n            <textarea placeholder=\"content..\" className=\"content\" value={content}\r\n                    onChange={(e) => this.handleInputChange(e, 'content')}></textarea>\r\n           {\r\n             this.state.isUpdate\r\n             ? <div className=\"isupdate\">\r\n                <button className=\"btn-cancel\" onClick={this.handleCancel}>Cancel</button>\r\n                <button className=\"btn-save\" onClick={this.handleSaveNote}>Update</button>\r\n             </div>\r\n             :  <button className=\"btn-save\" onClick={this.handleSaveNote}>Save</button>\r\n           }\r\n          </div>\r\n          <div className=\"dash-notes\">\r\n          {\r\n            notes.length > 0\r\n              ? (\r\n                    <Fragment>\r\n                    {\r\n                      notes.map(note => {\r\n                        return (\r\n                          <div className=\"card-container\" key={note.id}>\r\n                          <div className=\"delete-confirm\">\r\n                            <button onClick={(e)=> {\r\n                              e.target.parentElement.nextSibling.style.transform = 'translate(-1000px, 2px)'\r\n                              e.target.parentElement.style.opacity = '0'\r\n                              setTimeout(()=>{\r\n                              this.deleteNote(note)\r\n                              },300)\r\n                            }}>YES</button>\r\n                            <button className=\"delete-confirm-no\" onClick={(e)=> {\r\n                              console.log(e.target.parentElement.nextSibling)\r\n                              e.target.parentElement.nextSibling.classList.remove('delete-slide')\r\n                            }}>NO</button>\r\n                          </div>\r\n                          <div className=\"dash-card\"\r\n                                onClick={(() => this.updateInput(note))}>\r\n                            <div className=\"dash-title\">\r\n                              <h3>{note.data.title}</h3>\r\n                              <p>{this.setDate(note.data.date)}</p>\r\n                            </div>\r\n                            <div className=\"dash-content\">\r\n                              <p>{note.data.content}</p>\r\n                            </div>\r\n                            <div className=\"btn-delete\" onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              e.target.parentElement.classList.add('delete-slide')\r\n                              }}>Delete</div>\r\n                          </div>\r\n                             \r\n                          </div>\r\n                        )\r\n                      } )\r\n                    } \r\n                    </Fragment>\r\n                    )\r\n              : (<p>anda tidak mempunyai note..</p>)\r\n          }\r\n            \r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n  userData: state.userData,\r\n  notes: state.notes\r\n})\r\n\r\nconst reduxDispatch = (dispatch) => ({\r\n  getNote     : (userID) => dispatch(getDataAPI(userID)),\r\n  saveNote    : (data) => dispatch(addDataAPI(data)),\r\n  updateNote  : (data) => dispatch(updateDataAPI(data)),\r\n  deleteNote  : (data) => dispatch(deleteDataAPI(data))\r\n})\r\n\r\nexport default connect(reduxState, reduxDispatch)(Dashboard);","/* eslint-disable array-callback-return */\r\nimport firebase, {database} from '../../firebase';\r\n\r\nexport const actionUserName = () => (dispatch) => {\r\n  setTimeout(() => {\r\n    return dispatch({type: 'CHANGE_USER', value: 'Huda Damar'})\r\n  }, 2000);\r\n}\r\n\r\nexport const registerUser = (data, blankform) => (dispatch) => {\r\n  dispatch({type: 'CHANGE_ISLOADING', value: true})\r\n  return (\r\n     firebase.auth()\r\n            .createUserWithEmailAndPassword(data.email, data.password)\r\n            .then(res => {\r\n              console.log(res)\r\n              dispatch({type: 'CHANGE_ISLOADING', value: false})\r\n              blankform();\r\n              dispatch({type: 'CHANGE_POPUP', value: true})\r\n              setTimeout(() => {\r\n              dispatch({type: 'CHANGE_POPUP', value: false})\r\n              }, 2000);\r\n            })\r\n            .catch(error => {\r\n              let errorCode = error.code;\r\n              let errorMessage = error.message;\r\n              dispatch({type: 'CHANGE_ISLOADING', value: false})\r\n              alert(errorCode, errorMessage)\r\n            })\r\n  )\r\n}\r\n\r\nexport const loginUser = (data, blankform) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    dispatch({type: 'CHANGE_ISLOADING', value: true})\r\n     firebase.auth()\r\n             .signInWithEmailAndPassword(data.email, data.password)\r\n             .then(res => {\r\n                const userData = {\r\n                  email: res.user.email,\r\n                  uid: res.user.uid,\r\n                  emailVerified: res.user.emailVerified,\r\n                  refreshToken: res.user.refreshToken\r\n                }\r\n                dispatch({type: 'CHANGE_ISLOADING', value: false})\r\n                dispatch({type: 'CHANGE_ISLOGIN',   value: true})\r\n                dispatch({type: 'CHANGE_USER',      value: userData})\r\n                resolve(userData)\r\n                console.log(userData)\r\n             })\r\n             .catch(error => {\r\n                let errorCode = error.code;\r\n                let errorMessage = error.message;\r\n                console.log(errorCode, errorMessage)\r\n                blankform();\r\n                dispatch({type: 'CHANGE_ISLOADING', value: false})\r\n                dispatch({type: 'CHANGE_ISLOGIN',   value: false})\r\n                reject('Akun tidak ditemukan, silahkan periksa kembali..')\r\n             })\r\n  })\r\n}\r\n\r\nexport const addDataAPI = (data) => (dispatch) => {\r\n  database.ref('notes/' + data.userId).push({\r\n    title: data.title,\r\n    content: data.content,\r\n    date: data.date\r\n  })\r\n}\r\n\r\nexport const getDataAPI = (userID) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    database.ref('notes/' + userID)\r\n            .on('value', function  (snapshot){\r\n              const dataNotes = []\r\n                if(snapshot.val()){\r\n                  Object.keys(snapshot.val()).forEach(key => {\r\n                    dataNotes.push({\r\n                      id: key,\r\n                      data: snapshot.val()[key]\r\n                    })\r\n                  });\r\n                  dispatch({type: 'GET_NOTES', value : dataNotes})\r\n                  resolve(snapshot.val())\r\n                }\r\n            }, (error) => {\r\n              reject(error)\r\n            })\r\n  })\r\n}\r\n\r\nexport const updateDataAPI = (data) => (dispatch) => {\r\n  const putNote = database.ref(`notes/${data.userId}/${data.noteId}`);\r\n  console.log(data.noteId)\r\n  return new Promise((resolve, reject) => {\r\n    putNote.set({\r\n      title: data.title,\r\n      content: data.content,\r\n      date: data.date\r\n    }, (err) => {\r\n      if(err){\r\n        reject(alert(err))\r\n      } else {\r\n        resolve(alert(`data dengan title : ${data.title} , Berhasil di Update`))\r\n      }\r\n    })\r\n           \r\n  })\r\n}\r\n\r\nexport const deleteDataAPI = (data) => (dispatch) => {\r\n  console.log(data.noteId)\r\n  return new Promise((resolve, reject) => {\r\n    database.ref(`notes/${data.userId}/${data.noteId}`).remove();\r\n  })\r\n}","import React from 'react';\r\n\r\nconst Button = ({title, onClick, loading}) => {\r\n  if(loading){\r\n    return (<button disabled><div className=\"loading\" ></div></button>)\r\n  }\r\n  return (\r\n    <button onClick={onClick}>{title}</button>\r\n  )\r\n}\r\n\r\nexport default Button;","import React, {Component} from 'react';\r\nimport './login.scss';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../../Config/redux/action';\r\nimport Button from '../../../Components/atoms/Button';\r\n\r\nclass Login extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      [e.target.id] : e.target.value\r\n    })\r\n  }\r\n\r\n  handleLoginSubmit = async (e) => {\r\n    const {email, password} = this.state;\r\n    const blankForm = () => this.setState({password: ''})\r\n    const {history} = this.props\r\n    const res = await this.props.loginFirebaseUser({email, password}, blankForm).catch(err => alert(err))\r\n    if(res){\r\n      localStorage.setItem('userData', JSON.stringify(res))\r\n      history.push('/Dashboard')\r\n    }\r\n    \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <p>Login pages</p>\r\n        {this.props.popup ? <p>Login OKE</p> : null}\r\n        \r\n        <input type=\"text\" id=\"email\" value={this.state.email} placeholder=\"Email\"\r\n                onChange={this.handleInputChange}/>\r\n                \r\n        <input type=\"password\" id=\"password\" value={this.state.password} placeholder=\"Password\"\r\n                onChange={this.handleInputChange}/>\r\n        \r\n        <Button onClick={this.handleLoginSubmit} title=\"Login\" loading={this.props.isLoading}/>\r\n          <span>tidak punya akun? <a href=\"/Register\">register</a></span>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n  isLoading: state.isLoading,\r\n  popup: state.popup\r\n})\r\n\r\nconst reduxDispatch = () => (dispatch) => ({\r\n  loginFirebaseUser: (data, blankform) => dispatch(loginUser(data, blankform)),\r\n})\r\n\r\nexport default connect(reduxState, reduxDispatch)(Login);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../Components/atoms/Button';\r\nimport { registerUser } from '../../../Config/redux/action';\r\n\r\nclass Register extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      [e.target.id] : e.target.value\r\n    })\r\n  }\r\n\r\n  handleRegisterSubmit = (e) => {\r\n    const {email, password} = this.state;\r\n    const blankForm = () => this.setState({email: '', password: ''})\r\n    this.props.registerFirebaseUser({email, password}, blankForm)\r\n    \r\n  }\r\n\r\n  changeUser = () => {\r\n    this.props.changeUserName();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <p>Register {this.props.userName}</p>\r\n        {this.props.popup ? <p>Register OKE</p> : null}\r\n        \r\n        <input type=\"text\" id=\"email\" value={this.state.email} placeholder=\"Email\"\r\n                onChange={this.handleInputChange}/>\r\n                \r\n        <input type=\"password\" id=\"password\" value={this.state.password} placeholder=\"Password\"\r\n                onChange={this.handleInputChange}/>\r\n        \r\n        <Button onClick={this.handleRegisterSubmit} title=\"Register\" loading={this.props.isLoading}/>\r\n        <span>sudah punya akun? <a href=\"/\">Login</a></span>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n  isLoading: state.isLoading,\r\n  popup: state.popup\r\n})\r\n\r\nconst reduxDispatch = () => (dispatch) => ({\r\n  registerFirebaseUser: (data, blankform) => dispatch(registerUser(data, blankform)),\r\n})\r\n\r\nexport default connect(reduxState,reduxDispatch)(Register);","const initState = {\r\n  popup: false,\r\n  isLogin: false,\r\n  isLoading: false,\r\n  userData: {},\r\n  notes: []\r\n}\r\n\r\nconst reducer = (state=initState, action) => {\r\n  if(action.type === 'CHANGE_POPUP'){\r\n      return {\r\n        ...state,\r\n        popup: action.value\r\n      }\r\n  }\r\n  if(action.type === 'CHANGE_ISLOGIN'){\r\n    return {\r\n      ...state,\r\n      isLogin: action.value\r\n    }\r\n  }\r\n  if(action.type === 'CHANGE_USER'){\r\n    return {\r\n      ...state,\r\n      userData: action.value\r\n    }\r\n  }\r\n  if(action.type === 'CHANGE_ISLOADING'){\r\n    return {\r\n      ...state,\r\n      isLoading: action.value\r\n    }\r\n  }\r\n  if(action.type === 'GET_NOTES'){\r\n    return {\r\n      ...state,\r\n      notes: action.value\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default reducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducer';\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk))\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Dashboard from '../Dashboard';\nimport Login from '../Login';\nimport Register from '../Register';\nimport {store} from '../../../Config/redux'\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n    <Route path=\"/simple-note\" exact component={Login}/>\n    <Route path=\"/Dashboard\" component={Dashboard}/>\n    <Route path=\"/Register\" component={Register}/>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/pages/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}